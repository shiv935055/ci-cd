pipeline {
  agent {
    docker {
      image 'shiv9350/ultimate-cicd:8'
      // use env.WORKSPACE instead of $WORKSPACE
      args "--user root -v /var/run/docker.sock:/var/run/docker.sock -v ${env.WORKSPACE}:${env.WORKSPACE} -w ${env.WORKSPACE}"
    }
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh "echo Using workspace: ${env.WORKSPACE}"
      }
    }

    stage('Build and Test') {
      steps {
        sh "ls -ltr ${env.WORKSPACE}"
        sh "cd ${env.WORKSPACE}/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package"
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.110.33.155:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
          sh "cd ${env.WORKSPACE}/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}"
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "shiv9350/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker')
      }
      steps {
        script {
          sh "cd ${env.WORKSPACE}/java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "ci-cd"
        GIT_USER_NAME = "shiv935055"
      }
      steps {
        withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
          sh """
            git config user.email "shiv@gmail.com"
            git config user.name "shiv kumar"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" ${env.WORKSPACE}/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add ${env.WORKSPACE}/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          """
        }
      }
    }
  }
}
